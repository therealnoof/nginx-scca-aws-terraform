# Set the user that nginx worker processes will run as to "nginx"
user nginx;

# Set the number of worker processes to the number of CPU cores in the system
worker_processes auto;
worker_rlimit_nofile 65535;

# Load Nginx App Protect Module
load_module modules/ngx_http_app_protect_module.so;


# Point the error log to a file and set to notice log level.
# Must not be set to debug for Apache STIG AS24-U1-000065, AS24-U1-000630 AS24-U2-00640
error_log /var/log/nginx/error.log notice;
pid        /tmp/nginx.pid;

# Increase the number of connections per worker
# Nginx is capable of handling many many more connections than the default 1024/worker
events {
    worker_connections 8000;
}

http {

    # NGINX App Protect WAF Config

    app_protect_enable on; # This is how you enable NGINX App Protect WAF in the relevant context/block
    app_protect_policy_file "/etc/app_protect/conf/NginxDefaultPolicy.json"; # This is a reference to the policy file to use. If not defined, the default policy is used
    app_protect_security_log_enable on; # This section enables the logging capability
    app_protect_security_log "/etc/app_protect/conf/log_default.json" syslog:server=127.0.0.1:515; # This is where the remote logger is defined in terms of: logging options (defined in the referenced file), log server IP, log server port


    # Use paths that are allowed for non-privileged users
    proxy_temp_path /tmp/proxy_temp;
    client_body_temp_path /tmp/client_temp;
    fastcgi_temp_path /tmp/fastcgi_temp;
    uwsgi_temp_path /tmp/uwsgi_temp;
    scgi_temp_path /tmp/scgi_temp;

    # Satisfies Apache STIG AS24-U2-000630
    server_tokens off;

    # Timeouts for Apache STIG AS24-U1-000590 AS24-U2-000590 AS24-U1-000650
    client_body_timeout 10s;
    client_header_timeout 10s;
    keepalive_timeout 60s;
    send_timeout 10s;

    # Allow/Deny for Apache STIG AS24-U1-000670 AS24-U2-000680
    allow 192.168.0.0/16;
    allow 10.0.0.0/8;
    allow 172.16.0.0/16;
    allow 0.0.0.0/0;
    deny all;

    # Setup Access Log format Apache STIG AS24-U1-000130, , AS24-U1-000750, AS24-U2-000090
    # AS24-U1-000190 - Check permissions for /var/log/nginx for 0640 (permissions may change due to docker container)
    # %a %A  %h %H %l %m %s %t %u %U %Referer
    # Client IP, Local IP, Hostname, Request Protocol, remote log name, request method, status, time, remote user, url path, referer
    log_format extended '$remote_addr, X-Forwarded-For: $http_x_forwarded_for, $server_addr, $host, $server_protocol,'
                        ' $remote_user, $request_method, $status, [$time_local], $ssl_client_s_dn,'
                        ' $request_uri, $http_referer, "$request"';
    access_log /var/log/nginx/access.log extended;

    # Stripped down the mime types. This should satifsy what's in Apache STIG AS24-U2-00300 and 00320
    types {
        text/html                                        html htm shtml;
        text/css                                         css;
        text/xml                                         xml;
        image/gif                                        gif;
        image/jpeg                                       jpeg jpg;
        application/javascript                           js;
        application/atom+xml                             atom;
        application/rss+xml                              rss;

        text/plain                                       txt;

        image/png                                        png;
        image/svg+xml                                    svg svgz;
        image/webp                                       webp;
        image/x-icon                                     ico;
        image/x-ms-bmp                                   bmp;

        application/java-archive                         jar war ear;
        application/json                                 json;
        application/pdf                                  pdf;
        application/postscript                           ps eps ai;
        application/rtf                                  rtf;

        application/wasm                                 wasm;
        application/x-java-jnlp-file                     jnlp;
        application/x-x509-ca-cert                       der pem crt;
        application/xhtml+xml                            xhtml;
        application/zip                                  zip;

        audio/mpeg                                       mp3;

        video/mp4                                        mp4;
        video/mpeg                                       mpeg mpg;
        video/quicktime                                  mov;
        video/webm                                       webm;
        video/x-msvideo                                  avi;
    }

    # Setup memory zone for connection and requests/sec rate limits based on remote IP address
    limit_conn_zone $binary_remote_addr zone=ip_addr:10m;
    limit_req_zone $binary_remote_addr zone=ten:10m rate=10r/s;

    # Upstream block for backend server(s) if load balancing
    # This is also used for memory allocation to share connection information between worker processes
    upstream bottom_nginx {
        zone bottom_nginx 64k;
        server 10.0.7.0:80;
    }

    # Server block for redirecting http traffic to https
    server {
     	# Require TLS handshake APSEC APSC-DV-002460
        # IP + Port 80 combination to satisfy Apache STIG AS24-U1-000360, AS24-U2-000360 and AS24-U2-000960, AS24-U1-000780, AS24-U1-000950
        # ex: listen 172.16.0.1:80 default_server;
        listen 10.0.3.0:80;
        server_name localhost;
        return 301 https://$host$request_uri; #uses browser 301 method
    }

    # Server block for serving secure content
    server {
     	# Require TLS handshake APSEC APSC-DV-002460
        # IP + Port 80 combination to satisfy Apache STIG AS24-U1-000360, AS24-U2-000360 and AS24-U2-000960, AS24-U1-000780, AS24-U1-000950
        # ex: listen 172.16.0.1:443 default_server;
        # Satisfies Apache STIG AS24-U1-000030 APSEC APSC-DV-002440
        listen 10.0.3.0:443 ssl default_server;

        # Add server_name for virtual host capabilites
        server_name nginxdemoscca.com;

        # Apply connection and rate limits
        limit_conn ip_addr 10;
        limit_req zone=ten;

        # Certificates and client verification
        # On host, set permissions on files to 0600 for Apache STIG AS24-U2-000390 and APSC STIG APSC-DV-001820
        ssl_certificate /etc/ssl/nginxsccademo/nginxsccademo.crt;
        ssl_certificate_key /etc/ssl/nginxsccademo/nginxsccademo.key;

        # This satisfies Apache STIG AS24-U2-000380 /this requests/requires the cac cert
        #ssl_verify_client on;
        #ssl_verify_depth 4;

        # Satisfies Apache STIG AS24-U2-000810 APSEC APSC-DV-0023000  /this is the DoD root cert
        #ssl_client_certificate /etc/nginx/ssl/DoDRoots.crt;

        ssl_session_cache shared:SSL:50m;
        ssl_session_timeout 1d;
        ssl_session_tickets off;

        # Satisfy Apache STIG AS24-U2-000030, AS24-U1-000030
        ssl_protocols TLSv1.2 TLSv1.3;
        # Satisfies Apache STIG AS24-U1-000900 and APSEC APSC-DV-002040 002290 002010
        ssl_ciphers "TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-CHACHA20-POLY1305:!EXPORT";

        # Error pages for 400/500 errors
        # Satisfies Apache STIG AS24-U2-000630
        error_page 495 496 497 400 /400.html;
        error_page 500 502 503 504 /500.html;
        location = /400.html {
            internal;
            root /usr/share/nginx/my_app/errors;
        }
        location = /500.html {
            internal;
            root /usr/share/nginx/my_app/errors;
        }

        # Add headers for Site and TLS protections
        add_header X-Frame-Options "SAMEORIGIN";
        add_header Strict-Transport-Security max-age=15768000;

        # Satisfies Apache STIG AS24-U2-000580
        root /usr/share/nginx/my_app;
        # Satisfies Apache STIG AS24-U2-000620
        index index.html;

        location / {

            # Limit HTTP Methods
            limit_except DELETE GET HEAD POST {
                deny all;
            }
            # Proxy settings
            # Limit TLS Protocols
            #proxy_ssl_protocols TLSv1.2 TLSv1.3; # comment this out on the top tier
            #Satisfies APSEC APSC-DV-002040 002290 # comment this out on the top tier
            #proxy_ssl_ciphers "TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-CHACHA20-POLY1305:!EXPORT";
            # Proxy to the Upstream server that was created above.
            # APSEC STIG APSC-DV-002440
            proxy_pass http://bottom_nginx; # change this to http: on the top tier or leave it to do ssl from bottom tier to application
            # Mutual TLS to the server we are proxying to above.
            #ssl_certificate /etc/ssl/stigdemo/stigdemo.crt;
            #ssl_certificate_key /etc/ssl/stigdemo/stigdemo.key;
            # APSEC STIG APSC-DV-002000 Timeouts for application connections
            proxy_read_timeout 60s;
            proxy_send_timeout 60s;
            # Ensure headers sent to upstream servers for the host that is being accessed and
            # for the client DN of the user that connected
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Subject $ssl_client_s_dn;

            # Intercept proxy errors
            proxy_intercept_errors on;
        }
    }
}